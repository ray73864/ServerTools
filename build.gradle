buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.7.0-SNAPSHOT'
    }
}

String mcversion = "1.7.2"
String forgeversion = "10.12.0.1048"
version = '2.0.0'

apply plugin: 'forge'
apply plugin: 'grgit'

archivesBaseName = "ServerTools-CORE"

minecraft {
    version = mcversion + "-" + forgeversion
    assetDir = "run/assets"
}

def actualVersion = version

if (System.getenv("BUILD_NUMBER") != null) {
    version = "${minecraft.version}-$version." + System.getenv("BUILD_NUMBER")
    actualVersion += "." + System.getenv("BUILD_NUMBER")
} else if (new File(projectDir, '.git').exists()) {
    def repo = grgit.repo('.')
    version = "${minecraft.version}-$version-${repo.history.log().find().abbreviatedId}"
    actualVersion += "-${repo.history.log().find().abbreviatedId}"
} else {
    version = "${minecraft.version}-$version-DEV"
    actualVersion += "-DEV"
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'com.matthewprenger.servertools.core.asm.STPlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

subprojects {
    apply plugin: 'java'

    archivesBaseName = "ServerTools-" + name.toUpperCase()
    version = rootProject.version

    dependencies {
        compile rootProject
    }

    rootProject.reobf {
        reobf(jar) { spec ->
            spec.classpath = sourceSets.main.compileClasspath
        }
    }
}

allprojects {
    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'

    group = "com.matthewprenger.servertools"

    processResources {
        from(sourceSets.main.resources.srcDirs) {
            include '**/*.info'
            include '**/*.properties'

            expand([
                    'version': actualVersion,
                    'mcversion': mcversion
            ])
        }

        from(sourceSets.main.resources.srcDirs) {
            exclude '**/*.info'
            exclude '**/*.properties'
        }
    }

    jar {
        manifest {
            attributes 'Implementation-Title': project.name
            attributes 'Implementation-Version': actualVersion
        }
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        from 'build/docs/javadoc'
        classifier = 'javadoc'
    }

    task deobfJar(type: Jar) {
        from sourceSets.main.output
        classifier = 'deobf'
    }

    build.dependsOn sourceJar, javadocJar, deobfJar

    artifacts {
        archives sourceJar
        archives javadocJar
        archives deobfJar
    }

    apply plugin: 'maven'

    uploadArchives {
        uploadArchives.dependsOn 'build'

        if (project.hasProperty("mavendir")) {
            logger.info("Publishing to maven")

            repositories.mavenDeployer {
                repository(url: project.mavendir)
            }

            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name = project.archivesBaseName
                    packaging 'jar'
                    description 'A minecraft server administration mod'
                    url 'http://servertools.matthewprenger.com/'

                    scm {
                        url 'https://github.com/matthewprenger/ServerTools'
                        connection 'scm:git:git://github.com/matthewprenger/ServerTools.git'
                        developerConnection 'scm:git:git@github.com:matthewprenger/ServerTools.git'
                    }

                    issueManagement {
                        system 'github'
                        url 'https://github.com/matthewprenger/ServerTools/issues'
                    }

                    licenses {
                        license {
                            name 'Apache License Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.html'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'matthewprenger'
                            name 'Matthew Prenger'
                            roles { role 'developer' }
                        }
                    }
                }
            }
        }
    }
}

project.subprojects.each { p ->
    p.tasks.withType(Jar)*.each { t ->
        t.destinationDir = new File(rootProject.getBuildDir(), 'libs')
    }
}
