buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.0-SNAPSHOT'
    }
}

def actualVersion = "2.0.0"
def mcversion = "1.6.4"
def forgeversion = "9.11.1.964"

if (System.getenv("BUILD_NUMBER") != null) {
	version = mcversion + "-" + actualVersion + "." + System.getenv("BUILD_NUMBER");
	actualVersion += "." + System.getenv("BUILD_NUMBER");
} else {
	version = mcversion + "-" + actualVersion + ".dev";
	actualVersion += ".dev";
}

allprojects {	
	sourceCompatibility = '1.7'
	targetCompatibility = '1.7'
}

apply plugin: 'forge'
group = "com.matthewprenger.servertools.core"
archivesBaseName = "ServerTools-CORE"

minecraft {
	version = mcversion + "-" + forgeversion
	assetDir = "run/assets"
}

subprojects {
	apply plugin: 'java'

	group = "com.matthewprenger.servertools." + name.toLowerCase()
	archivesBaseName = "ServerTools-" + name.toUpperCase()
	version = rootProject.version

	dependencies {
		compile rootProject
	}

	rootProject.reobf {
		reobf(jar) { spec ->
			spec.classpath = sourceSets.main.compileClasspath
		}
	}
	
	jar {
		destinationDir = new File(rootProject.getBuildDir(), 'libs')
	}
}

allprojects{

    processResources {

        from (sourceSets.main.resources.srcDirs) {
            include '**/*.info'
            include '**/*.properties'

            expand ([
                    'version': actualVersion,
                    'minecraft_version': mcversion,
					'forge_version': forgeversion
            ])
        }

        from (sourceSets.main.resources.srcDirs) {
            exclude '**/*.info'
            exclude '**/*.properties'
        }
    }
}
